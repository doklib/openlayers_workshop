{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/pixelworks/lib/index.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ol.css?55f6","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ol.css","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/css-loader/dist/runtime/api.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/style-loader/lib/addStyles.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/style-loader/lib/urls.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/pixelworks/lib/processor.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/pixelworks/lib/util.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/util.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/AssertionError.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/CollectionEventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ObjectEventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/obj.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/events.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/Disposable.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/functions.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/events/Event.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/events/Target.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/events/EventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/Observable.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/Object.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/Collection.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/MapEvent.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/MapBrowserEvent.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/has.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/MapBrowserEventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/MapBrowserPointerEvent.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/EventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/EventSource.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/MouseSource.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/MsSource.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/NativeSource.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/PointerEvent.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/array.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/TouchSource.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/pointer/PointerEventHandler.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/MapBrowserEventHandler.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/MapEventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/MapProperty.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/render/EventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/TileState.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/asserts.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/structs/PriorityQueue.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/TileQueue.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/tilegrid/common.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/math.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/centerconstraint.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/extent/Corner.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/extent/Relationship.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/extent.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/resolutionconstraint.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/rotationconstraint.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ViewHint.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ViewProperty.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/coordinate.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/easing.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/GeometryType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/GeometryLayout.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/transform.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/sphere.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/proj/Units.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/proj/Projection.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/proj/epsg3857.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/proj/epsg4326.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/proj/projections.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/proj/transforms.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/proj.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/transform.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/Geometry.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/SimpleGeometry.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/area.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/closest.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/deflate.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/inflate.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/simplify.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/LinearRing.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/Point.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/contains.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/interiorpoint.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/intersectsextent.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/segments.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/reverse.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/flat/orient.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/geom/Polygon.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/View.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/dom.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/Property.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/Base.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/State.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/Group.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/size.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/PluggableMap.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/control/Control.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/css.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/Layer.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/control/Attribution.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/control/Rotate.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/control/Zoom.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/Kinetic.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/Property.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/Interaction.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/DoubleClickZoom.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/events/condition.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/Pointer.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/DragPan.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/DragRotate.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/render/Box.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/DragBox.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/DragZoom.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/events/KeyCode.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/KeyboardPan.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/KeyboardZoom.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/MouseWheelZoom.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/PinchRotate.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction/PinchZoom.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/render/Event.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/color.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/style/IconImageCache.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/renderer/Map.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/renderer/Composite.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/Map.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/control/util.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/interaction.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/TileProperty.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/BaseTile.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/TileRange.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/structs/LRUCache.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/render/canvas/LabelCache.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/render/canvas.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ImageState.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/renderer/Layer.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/renderer/canvas/Layer.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/renderer/canvas/TileLayer.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/Tile.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/reproj/common.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/Tile.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ImageTile.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/tilecoord.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/TileCache.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/reproj.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/reproj/Triangulation.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/reproj/Tile.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/tileurlfunction.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/Source.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/tilegrid/TileGrid.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/tilegrid.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/Tile.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/TileEventType.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/UrlTile.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/TileImage.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/XYZ.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/BaseImage.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/layer/Image.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ImageBase.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/ImageCanvas.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/reproj/Image.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/Image.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/node_modules/ol/source/Raster.js","webpack:///d:/dev_d/tutorial/openlayers-workshop-en/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Processor","content","options","hmr","transform","insertInto","undefined","locals","push","useSourceMap","list","toString","this","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","data","width","height","output","b","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","buffer","createWorker","config","onMessage","lines","lib","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","Infinity","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","destroy","_destroyed","job","shift","input","segmentLength","Math","ceil","offset","slices","jj","slice","event","_resolveJob","set","hasImageData","context","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","String","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","TypeError","ii","clear","getValues","values","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","events_Event","Event","propagationStopped","preventDefault","stopPropagation","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","len","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","f","getArray","elem","removeAt","prev","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","x","clientX","y","clientY","dx","abs","dy","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","a","linearFindNearest","direction","extension","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","load","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","min","max","cosh","exp","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","none","center","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","opt_extent","createOrUpdateEmpty","extent_equals","extendCoordinates","extendFlatCoordinates","flatCoordinates","end","stride","extendXY","getArea","area","extent_isEmpty","getWidth","getHeight","getBottomLeft","getBottomRight","getCenter","getCorner","corner","getTopLeft","getTopRight","getForViewAndSize","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","log","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","coordinate_equals","coordinate1","coordinate2","equals","rotate","angle","cosAngle","sinAngle","easeIn","pow","easeOut","inAndOut","linear","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","clone","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","k","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","val","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","isNaN","intersectsLineString","coordinatesExtent","ret","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","tmp","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","z","floor","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getComputedStyle","parseInt","w","h","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getProjection","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","newNode","oldNode","replaceChild","removeNode","node","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","left","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","renderEvent","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","arr1","arr2","len1","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","add","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","lastIndex","firstIndex","getAngle","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","g","color_toString","cacheSize","normalize","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerStates","getLayerRenderer","callback_1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","reduce","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","children_","children","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","labelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","div","heights","rotateAtOffset","offsetX","offsetY","ImageState","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","image","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","getImageData","err","Uint8Array","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile","tileState","getTile","setState","getInterimTile","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clearRect","zs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","restore","canvasTransform","gutter","transition","getTileImage","alpha","getOpaque","alphaChanged","globalAlpha","drawImage","endTransition","getImage","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","ctx","fillStyle","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","image_","Image","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","p1","p2","strokeStyle","lineWidth","closePath","stroke","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","self","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","BaseImage_extends","BaseImage","BaseImageLayer","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imageExtent","imageResolution","imagePixelRatio","getPixelRatio","clipped","img","dw","dh","Image_extends","layer_Image","ImageLayer","ImageBase_extends","ol_ImageBase","ImageBase","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","error_","getError","handleLoad_","reproj_Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","Raster_extends","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","renderedRevision_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","putImageData","sharedContext","HTMLCanvasElement","layerOrSource","raster","level","main_output","innerText"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, layerState.extent);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var projection = viewState.projection;\n            if (!ENABLE_RASTER_REPROJECTION) {\n                var sourceProjection = imageSource.getProjection();\n                if (sourceProjection) {\n                    projection = sourceProjection;\n                }\n            }\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n            if (image && this.loadImage(image)) {\n                this.image_ = image;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var extent = layerState.extent;\n        var clipped = extent !== undefined &&\n            !containsExtent(extent, frameState.extent) &&\n            intersects(extent, frameState.extent);\n        if (clipped) {\n            this.clip(context, frameState, extent);\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = ImageState.LOADED;\n        if (sourceImage) {\n            state = ImageState.IDLE;\n        }\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            listen(_this.layers_[i], EventType.CHANGE, _this.changed, _this);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            focus: null,\n            index: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            skippedFeatureUids: {},\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {}\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.focus = center;\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Infinity;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var imageData = getImageData(this.layers_[i], frameState, frameState.layerStatesArray[i]);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState, layerState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState, layerState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var element = renderer.renderFrame(frameState, layerState);\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","import 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZSource from 'ol/source/XYZ';\r\nimport {fromLonLat} from 'ol/proj';\r\nimport ImageLayer from 'ol/layer/Image';\r\nimport RasterSource from 'ol/source/Raster';\r\n\r\n\r\nconst key = 'pk.eyJ1Ijoic2luYWtvYmExIiwiYSI6ImNqbGN1ZjBscjA0Z20zcWxxM3ZraHc0bjQifQ.Ye-PTtzlRFBot7shDrN5Kg';\r\nconst elevation = new XYZSource({\r\n  url: 'https://api.mapbox.com/v4/mapbox.terrain-rgb/{z}/{x}/{y}.pngraw?access_token=' + key,\r\n  crossOrigin: 'anonymous' \r\n});\r\nconst raster = new RasterSource({\r\n    sources: [elevation],\r\n    operation: flood\r\n}); \r\nnew Map({\r\n  target: 'map-container',\r\n  layers: [\r\n    new TileLayer({\r\n        source: new XYZSource({\r\n          url: 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg'\r\n        })\r\n      }),\r\n    new ImageLayer({\r\n        opacity: 0.8,\r\n        source: raster\r\n      })\r\n  ],\r\n  view: new View({\r\n    center: fromLonLat([-71.06, 42.37]),\r\n    zoom: 12\r\n  })\r\n});\r\nfunction flood(pixels, data) {\r\n    const pixel = pixels[0];\r\n    if (pixel[3]) {\r\n      // decode R, G, B values as elevation\r\n      const height = -10000 + ((pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1);\r\n      if (height <= data.level) {\r\n        // sea blue\r\n        pixel[0] = 145; // red\r\n        pixel[1] = 175; // green\r\n        pixel[2] = 186; // blue\r\n        pixel[3] = 255; // alpha\r\n      } else {\r\n        // transparent\r\n        pixel[3] = 0;\r\n      }\r\n    }\r\n    return pixel;\r\n}\r\n\r\n\r\nconst control = document.getElementById('level');\r\nconst output = document.getElementById('output');\r\ncontrol.addEventListener('input', function() {\r\n  output.innerText = control.value;\r\n  raster.changed();\r\n});\r\noutput.innerText = control.value;\r\n\r\nraster.on('beforeoperations', function(event) {\r\n    event.data.level = control.value;\r\n});\r\n  \r\n\r\n  \r\n\r\n  "],"sourceRoot":""}